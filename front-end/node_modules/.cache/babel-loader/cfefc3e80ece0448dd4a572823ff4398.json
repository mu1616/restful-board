{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mu161\\\\IdeaProjects\\\\restful-board\\\\front-end\\\\src\\\\component\\\\user\\\\UserListComponent.jsx\";\nimport React, { Component } from 'react';\nimport ApiService from \"../../ApiService\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass UserListComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadUserList = () => {\n      ApiService.fetchUsers().then(res => {\n        // = function(res) { ... }\n        this.setState({\n          users: res.data\n        });\n      }).catch(err => {\n        console.log('reloadUserList() Error !', err);\n      });\n    };\n\n    this.deleteUser = userId => {\n      ApiService.deleteUser(userId).then(res => {\n        this.setState({\n          message: 'User Deleted Successfully.'\n        });\n        this.setState({\n          // filter -> 특정 조건에 부합되는 원소들만 뽑아서 새 배열을 만들어줌\n          users: this.state.users.filter(user => user.id !== userId)\n        });\n      }).catch(err => {\n        console.log('deleteUser() Error!', err);\n      });\n    };\n\n    this.addUser = () => {\n      window.localStorage.removeItem(\"userId\");\n      this.props.history.push('/add-user'); //리다이렉트\n    };\n\n    this.state = {\n      users: [],\n      message: null\n    };\n  } //componentDidMount()는 컴포넌트가 마운트된 직후, 즉 트리에 삽입된 직후에 호출된다.\n\n\n  componentDidMount() {\n    this.reloadUserList();\n  } //state 에 있는 값을 바꾸기 위해서는, this.setState 를 무조건 거쳐야합니다. \n  //리액트에서는, 이 함수가 호출되면 컴포넌트가 리렌더링 되도록 설계되어있습니다.\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"User List\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.addUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Add User\"), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"SSN\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, this.state.users.map(user => /*#__PURE__*/React.createElement(TableRow, {\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, user.id), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, user.name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, user.password), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, user.ssn), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      onClick: () => this.deleteUser(user.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n}\n\nconst style = {\n  display: 'flex',\n  justifyContent: 'center'\n};\nexport default UserListComponent;","map":{"version":3,"sources":["C:/Users/mu161/IdeaProjects/restful-board/front-end/src/component/user/UserListComponent.jsx"],"names":["React","Component","ApiService","Table","TableBody","TableCell","TableHead","TableRow","Button","Typography","CreateIcon","DeleteIcon","UserListComponent","constructor","props","reloadUserList","fetchUsers","then","res","setState","users","data","catch","err","console","log","deleteUser","userId","message","state","filter","user","id","addUser","window","localStorage","removeItem","history","push","componentDidMount","render","style","map","name","password","ssn","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CreateIcon from '@material-ui/icons/Create' \r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nclass UserListComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            users : [],\r\n            message : null\r\n        }\r\n    }\r\n\r\n    //componentDidMount()는 컴포넌트가 마운트된 직후, 즉 트리에 삽입된 직후에 호출된다.\r\n    componentDidMount() {\r\n        this.reloadUserList();\r\n    }\r\n\r\n    //state 에 있는 값을 바꾸기 위해서는, this.setState 를 무조건 거쳐야합니다. \r\n    //리액트에서는, 이 함수가 호출되면 컴포넌트가 리렌더링 되도록 설계되어있습니다.\r\n    reloadUserList = () => {\r\n        ApiService.fetchUsers()\r\n            .then(res => {       // = function(res) { ... }\r\n                this.setState({\r\n                    users : res.data\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log('reloadUserList() Error !', err);\r\n            })\r\n    }\r\n\r\n    deleteUser = (userId) => {\r\n        ApiService.deleteUser(userId)\r\n            .then(res => {\r\n                this.setState({\r\n                    message : 'User Deleted Successfully.'\r\n                });\r\n                this.setState({        // filter -> 특정 조건에 부합되는 원소들만 뽑아서 새 배열을 만들어줌\r\n                    users : this.state.users.filter(user =>\r\n                        user.id !== userId)\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log('deleteUser() Error!', err);\r\n            })\r\n    }\r\n\r\n    addUser = () => {\r\n        window.localStorage.removeItem(\"userId\");\r\n        this.props.history.push('/add-user');   //리다이렉트\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h4\" style={style}>User List</Typography>\r\n                <Button variant=\"contained\" color=\"primary\"onClick={this.addUser}>Add User</Button>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Password</TableCell>\r\n                            <TableCell>SSN</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.users.map( user =>\r\n                            <TableRow key = {user.id}>\r\n                                <TableCell>{user.id}</TableCell>\r\n                                <TableCell>{user.name}</TableCell>\r\n                                <TableCell>{user.password}</TableCell>\r\n                                <TableCell>{user.ssn}</TableCell>\r\n                                <TableCell align=\"right\" onClick = { () => this.deleteUser(user.id) }>\r\n                                    <DeleteIcon />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            )}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        );      \r\n    }\r\n}\r\n\r\nconst style = {\r\n    display : 'flex',\r\n    justifyContent : 'center'\r\n}\r\nexport default UserListComponent;\r\n"]},"metadata":{},"sourceType":"module"}